<?xml version="1.0"?>
<project default="Post-Build" xmlns="http://nant.sf.net/release/0.92/nant.xsd">

  <!--
  Uncomment these few lines if the nAnd Contrib binaries are not in the same directory than the nAnt files.
  Bear in mind these lines are an example, therefore configure what has to be configured ;)
  -->
  <!--<property name="nantcontrib-dir"
            value="${path::combine(nant::get-base-directory(), '../../NAntContrib')}"
            overwrite="false" />

  <loadtasks assembly="${path::combine(nantcontrib-dir, 'bin/NAnt.Contrib.Tasks.dll')}"/>-->

  <!-- Properties -->
  <property name="release-dir" value="c:\Release\mvvm-core-Release" overwrite="false"/>
  <property name="code-dir" value="${release-dir}\bin"/>
  <property name="sln-file" value="Probel.Mvvm.sln" overwrite="false"/>
  <property name="tool-dir" value="${release-dir}\bin\tools"/>
  <property name="build-mode" value="release" overwrite="false"/>
  <property name="svn-repository" value="http://mvvm-core.googlecode.com/svn/trunk/"/>
  <property name="nest-dir" value="${release-dir}\mvvm-core\"/>
  <property name="nunit-prj" value="${release-dir}\src\Probel.Mvvm.nunit"/>

  <!-- Targets -->
  <target name="Pre-Build" description="Export the code locally">
    <echo message="========================================================================"/>
    <echo message="release-dir   : ${release-dir}"/>
    <echo message="code-dir      : ${code-dir}"/>
    <echo message="sln-file      : ${sln-file}"/>
    <echo message="tool-dir      : ${tool-dir}"/>
    <echo message="build-mode    : ${build-mode}"/>
    <echo message="svn-repository: ${svn-repository}"/>
    <echo message="========================================================================"/>

    <echo message="Clean release directory..."/>
    <delete>
      <fileset basedir="${release-dir}\">
        <include name="**.*"/>
		<exclude name="*.msi"/>
		<exclude name="*.zip"/>
      </fileset>
    </delete>
    <delete dir="${release-dir}\bin"/>
	<delete dir="${release-dir}\mvvm-core"/>


    <echo message="Creates dir"/>
    <mkdir dir="${nest-dir}\"/>
    <mkdir dir="${release-dir}\mvvm-core"/>
	<mkdir dir="${release-dir}\output"/>

<!--    <echo message="Checkout the code..."/>
    <exec program="svn.exe"
          commandline="checkout &quot;${svn-repository}&quot; &quot;${code-dir}&quot; -q"/>
-->
		<echo message="Checkout the code..."/>
		<exec program="svn.exe"
		      commandline="export &quot;${svn-repository}&quot; &quot;${code-dir}&quot; -q"/>
		
		<echo message="Get the revision number"/>
		<exec program="svn.exe"
		      commandline='info "${svn-repository}" --xml'
		      output="svninfo.xml"
		      failonerror="false"/>
		
		<xmlpeek file="svninfo.xml"
		         xpath="/info/entry/commit/@revision"
		         property="svn.revision"
		         failonerror="false"/>
		<echo message="Building revision number: ${svn.revision}"/>
		<delete file="svninfo.xml" failonerror="false" />	

		<delete file="${code-dir}\src\Version.cs" failonerror="false"/>
		<copy file="${code-dir}\src\Version.template"
		      tofile="${code-dir}\src\Version.cs">
			<filterchain>
				<replacestring from="$WCREV$" to="${svn.revision}" />
			</filterchain>
		</copy>		
  </target>

  <target name="Build" description="Build the solution" depends="Pre-Build">
    <!-- Build the solution -->
    <echo message="Building..."/>
    <echo message="Build mode: ${build-mode}"/>
    <echo message="Building file: ${code-dir}\src\${sln-file}"/>
    <msbuild project="${code-dir}\${sln-file}"
             verbosity="Minimal">
      <property name="Configuration" value="${build-mode}"/>
    </msbuild>
  </target>

  <target name="Post-Build" description="Post build: executes unit tests" depends="Build">
    <!-- Here should go the unit tests execution... -->
    <echo message="Test file: ${code-dir}\Probel.Mvvm.Test\bin\Release\Probel.Mvvm.Test.dll"/>

    <echo message="Run the unit tests..."/>
    <echo message="Command line: nunit-console.exe ${code-dir}\src\Probel.Mvvm.nunit /config=Release /nologo"/>
    <exec program="nunit-console.exe"
		  commandline="${code-dir}\src\Probel.Mvvm.nunit /out=${release-dir}\output\nunit-output.txt /config=Release /nologo /noshadow"/>
  </target>

  <!-- Create a release package with the binaries -->
  <target name="Release" description="Zip the binaries and rename the file" depends="Post-Build">

    <echo message="Copy: ${code-dir}\bin\Probel.Mvvm.Core\bin\${build-mode}\"/>
    <echo message="To  : ${nest-dir}"/>
    <copy todir="${nest-dir}\">
      <fileset basedir="${code-dir}\src\Probel.Mvvm.Core\bin\${build-mode}\">
        <exclude name="*.vshost.exe"/>
        <exclude name="*.vshost.exe.config"/>
        <exclude name="*.pdb"/>
        <include name="*.dll"/>
        <include name="*.xml"/>
        <include name="**/*"/>
      </fileset>
    </copy>
	
	<loadfile file="${code-dir}\src\Version.cs" property="version-file"/>
	<regex pattern="AssemblyVersion\(\&quot;(?'version'.*).*\&quot;"
	       input="${version-file}"/>
	<echo message="Version number: ${version}"/>
		
    <zip zipfile="${release-dir}\mvvm-core.${version}.zip">
      <fileset basedir="${nest-dir}\..\">
        <exclude name="bin\**" />
        <include name="**.*"/>
      </fileset>
    </zip>

    <echo message="Clean temporary files"/>
	<delete>
		<fileset basedir="${release-dir}">
			<exclude name="*.msi"/>
			<exclude name="*.zip"/>
			<include name="**.*"/>
		</fileset>
	</delete>
    <delete dir="${nest-dir}\"/>
    <delete dir="${release-dir}\mvvm-core"/>
    <delete dir="${release-dir}\bin"/>
	<delete dir="${release-dir}\output"/>
  </target>
</project>